Changelog for pjscan

Copyright 2012 Nedim Srndic, University of Tuebingen
nedimsrndic AT users DOT sf DOT net

14. February 2011, Version 1.3

	New features:
	
	1. The nu parameter of the One-class SVM can now be controlled using 
	command-line arguments. 
	
	Technical improvements:
	
	1. Parsing command-line arguments using the argtable2 library instead of 
	a manual parser. 

27. September 2011, Version 1.2

	Optimizations:
	
	1. pjscan-child now communicates to pjscan-js using pipes instead of 
	shared files in the /dev/shm directory. This shortened the running time of 
	pjscan-child by 30% and removed the dependency on libboost_iostreams. 
	
	2. Threads now use preallocated storage for token sequence parsing, which 
	reduces the number of memory allocations by approx. 90%. 
	
	Bugs fixed:
	
	#3 Main pjscan program uses std::exit(EXIT_FAILURE) instead of 
	std::abort() on error to avoid core dumps. 
	
	#4 Added error checking for some system calls that did not have it before. 
	
	#5 Using strtol() instead of atoi() for token parsing. 

20. July 2011, Version 1.1

	New features:
	
	1. Printing of machine learning features of a specified PDF file in 
	comparison to the learned model, 
	2. Dumping of all JavaScript scripts from a PDF file to a directory. 
	
	Bugs fixed:
	
	#1 Having a virtual destructor in a class that isn't inherited and has no 
	virtual functions unnecessarily generates a virtual table. 
	
	#2 boost::mutex::scoped_lock does not always release the lock after it gets 
	out of scope. This bug has not been confirmed or further investigated, and 
	it's not known whether it persists in newer versions of the library.

12. May 2011, Version 1.0

	Initial release
